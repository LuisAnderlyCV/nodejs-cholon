<!DOCTYPE html>
<html lang="en">

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="shortcut icon" type="image/x-icon" href="/src/views/img/icono.ico">
    <title>COMPRAS</title>

    <!-- Custom fonts admin for this template-->
    <link href="/src/boostrapdiseñoadmin/vendor/fontawesome-free/css/all.min.css" rel="stylesheet" type="text/css">
    <link
        href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
        rel="stylesheet">

    <!-- Custom styles for this template-->
    <link href="/src/boostrapdiseñoadmin/css/sb-admin-2.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/src/views/css/registrar.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
        integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />

    <!-- IMPORTAMOS LOS SCRIP NECESARIOS PARA GENERAR PDF-->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
    <script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>
</head>

<body id="page-top">

    <!-- Page Wrapper -->
    <div id="wrapper">

        <!-- Sidebar -->
        <%- include('../plantilla/listamodulos') %>
            <!-- End of Sidebar -->

            <!-- Content Wrapper -->
            <div id="content-wrapper" class="d-flex flex-column">

                <!-- Main Content -->
                <div id="content">

                    <!-- Topbar -->
                    <%- include('../plantilla/navbar') %>
                        <!-- End of Topbar -->
                        <!-- ESTA SERA MI PLANTILLA DE FACTURA -->
                        <div id="factura"
                            style="display: none; text-align: center; border: 2px solid black; padding: 10px;">
                            <img id="logo1" alt="Logo" width="100" height="100"
                                style="display: block; margin-left: auto; margin-right: auto;">
                            <h2 id="nombreEmpresa1"></h2>
                            <p id="direccionEmpresa1"></p>
                            <p id="rucEmpresa1"></p>

                            <hr>

                            <h3>FACTURA</h3>
                            <p id="numFactura"></p>

                            <hr>

                            <p id="fechaFactura"></p>
                            <p id="rucCliente"></p> <!-- Nuevo campo para el RUC del cliente -->
                            <p id="razonSocialCliente"></p> <!-- Nuevo campo para la Razón Social del cliente -->

                            <hr>

                            <h3>Detalles de la Factura:</h3>
                            <table border="1" id="tablaProductos1" class="table table-hover">
                                <tr>
                                    <th>Cantidad</th>
                                    <th>Descripción</th>
                                    <th>Precio Unitario</th>
                                    <th>Importe</th>
                                </tr>
                            </table>

                            <hr>

                            <p id="totalFactura"></p>
                            <p id="montoCancelado1"></p>
                            <p id="vuelto1"></p>
                            <p id="vendedor1"></p>
                        </div>
                        <!-- ---------------------------------------------------------- -->
                        <!-- ESTA SERA MI PLANTILLA DE BOLETA -->
                        <div id="boleta"
                            style="display: none; text-align: center; border: 2px solid black; padding: 10px;">
                            <img id="icono" alt="Icono" width="100" height="100"
                                style="display: block; margin-left: auto; margin-right: auto;">
                            <h2 id="nombreEmpresa"></h2>
                            <p id="direccionEmpresa"></p>
                            <p id="rucEmpresa"></p>

                            <hr>

                            <h3>BOLETA</h3>
                            <p id="idBoleta"></p>

                            <hr>

                            <p id="fechaVenta"></p>
                            <p id="horaVenta"></p>
                            <p id="nombreCliente"></p>

                            <hr>

                            <h3>Detalles de la Venta:</h3>
                            <table border="1" id="tablaProductos" class="table table-hover">
                                <tr>
                                    <th>Cantidad</th>
                                    <th>Descripción</th>
                                    <th>Precio Unitario</th>
                                    <th>Importe</th>
                                </tr>
                            </table>

                            <hr>

                            <p id="totalVenta"></p>
                            <p id="montoCancelado"></p>
                            <p id="vuelto"></p>
                            <p id="vendedor"></p>
                        </div>
                        <!-- --------------------------------------- -->


                        <!-- ACA DEBEMOS COPIAR LAS TABLAS O REGISTROS PARTE BLANCA -->
                        <div class="container-fluid">
                            <form class="row g-3">
                                <div class="col-md-3">
                                    <!--campo invisible para guaradr el id -->
                                    <input type="hidden" id="idcliente">
                                    <input type="hidden" id="idusuario">
                                    <input type="hidden" id="idcategoria">
                                    <!------------------------------------- -->
                                    <label for="idperfil">TIPO DE COMPROBANTE:</label>
                                    <div class="input-group mb-1">
                                        <select id="idtipodoc" class="form-control" disabled>
                                            <option value="RUC">RUC</option>
                                            <option value="BOLETA">BOLETA</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <label for="inputEmail4" class="form-label">DOCUMENTO:</label>
                                    <div class="input-group mb-3">
                                        <input type="text" class="form-control" placeholder="Ingrese el DOCUMENTO"
                                            id="documento">
                                        <a class="btn btn-primary" data-bs-toggle="modal"
                                            data-bs-target="#exampleModal1" id="buscarprove"
                                            style="width: 3em; font-size: 1em;"><i class="bi bi-search"></i></a>
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <label for="inputPassword4" class="form-label">CLIENTE:</label>
                                    <input type="text" class="form-control" id="nombreproveedor">
                                </div>
                                <div class="col-md-2">
                                    <label for="idfecha" class="form-label">FECHA:</label>
                                    <input type="date" class="form-control" id="idfecha" readonly>
                                </div>
                                <div class="col-md-2">
                                    <label for="idhora" class="form-label">HORA:</label>
                                    <input type="text" class="form-control" id="idhora" readonly>
                                </div>

                                <div class="col-md-3">
                                    <label for="inputAddress" class="form-label">SERIE:</label>
                                    <input type="text" class="form-control" id="idserie">
                                </div>
                                <div class="col-md-4">
                                    <label for="inputAddress2" class="form-label">NUMERO CORRELATIVO:</label>
                                    <input type="text" class="form-control" id="idcorrelativo">
                                </div>
                            </form>
                            <form id="formulario" class="row g-3">
                                <div class="col-md-4">
                                    <div class="input-group mb-3">
                                        <a class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal"
                                            id="buscarprove">SELECCIONAR PRODUCTO.. <i class="bi bi-search"></i></a>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <h3>Lista de Productos</h3>
                                    <div class="table-responsive">
                                        <table class="table table-hover">
                                            <thead>
                                                <tr>
                                                    <th scope="col">Nombre</th>
                                                    <th scope="col">Unidad de medida</th>
                                                    <th scope="col">Cantidad</th>
                                                    <th scope="col">Precio Unitario</th>
                                                    <th scope="col">Sub Total</th>
                                                    <th scope="col">Acciones</th>

                                                </tr>
                                            </thead>
                                            <tbody id="cuerpoTablaProductos"></tbody>
                                        </table>
                                    </div>
                                </div>
                                <div hidden class="col-md-4">
                                    <label for="inputCity" class="form-label">SUBTOTAL:</label>
                                    <input type="text" class="form-control" id="idtotal" readonly>
                                </div>

                                <div class="col-md-3">
                                    <label for="inputCity" class="form-label">TOTAL:</label>
                                    <input type="text" class="form-control" id="idtotal1" readonly>
                                </div>

                                <div class="col-md-3">
                                    <!-- Agrega el evento onchange al campo metodopago -->
                                    <label for="inputCity" class="form-label">METODO DE PAGO:</label>
                                    <select id="metodopago" class="form-control"
                                        onchange="mostrarCamposSegunMetodoPago(this.value)">
                                        <option value="CONTADO">CONTADO</option>
                                        <option value="CREDITO">CREDITO</option>
                                    </select>
                                </div>

                                <!-- Agrega los campos monto cancelado, vuelto, monto inicial y debe con la propiedad style="display:none" para ocultarlos inicialmente -->
                                <div class="col-md-3" id="camposContado" style="display:none">
                                    <label for="inputCity" class="form-label">MONTO CANCELADO:</label>
                                    <input type="text" class="form-control" id="montocanceladoContado"
                                        oninput="validarNumeros(this); calcularVueltoContado()">
                                </div>

                                <div class="col-md-3" id="camposContadoVuelto" style="display:none">
                                    <label for="inputCity" class="form-label">VUELTO:</label>
                                    <input type="text" class="form-control" id="vueltoContado" readonly>
                                </div>

                                <div class="col-md-3" id="camposCreditoMontoInicial" style="display:none">
                                    <label for="inputCity" class="form-label">MONTO INICIAL:</label>
                                    <input type="text" class="form-control" id="montoinicialCredito"
                                        oninput="validarNumeros(this); calcularDebeCredito()">
                                </div>

                                <div class="col-md-3" id="camposCreditoDebe" style="display:none">
                                    <label for="inputCity" class="form-label">DEBE:</label>
                                    <input type="text" class="form-control" id="debeCredito" readonly>
                                </div>

                        </div>
                        <div class="col-12">
                            <button onclick="enviarLista()" type="button" class="btn btn-primary">REGISTRAR LA
                                COMPRA</button>
                        </div>
                        </form>
                </div>
                <!-- MODAL PARA AGREGAR PROVEEDOR-->
                <div class="modal fade " id="exampleModal1" tabindex="-1" aria-labelledby="exampleModalLabel"
                    aria-hidden="true">
                    <div class="modal-dialog modal-xl">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="exampleModalLabel">SELECCIONAR CLIENTE</h1>

                            </div>
                            <div class="modal-body ">
                                <div class="right-container" style="padding: 20px; flex-grow: 1;">
                                    <div class="row g-3">
                                        <div class="col">
                                            <a href="/caja/clientes" class="btn btn-primary" role="button">
                                                AGREGAR CLIENTES
                                            </a>
                                        </div>
                                        <div class="col">
                                            <input type="text" class="form-control" id="busqueda"
                                                placeholder="  🔍︎    Buscar Cliente..."
                                                oninput="this.value = this.value.toUpperCase()">
                                        </div>
                                    </div>


                                    <h1>CLIENTES EN EL SISTEMA</h1>
                                    <div class="table-responsive">
                                        <table class="table table-striped table-bordered">
                                            <thead>
                                                <tr>
                                                    <th>Documento</th>
                                                    <th>Cliente</th>
                                                    <th>Telefono</th>
                                                    <th>Dirección</th>
                                                    <th>Acciones</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <% cliente.forEach(function(cliente) { %>
                                                    <tr>
                                                        <td>
                                                            <%= cliente.rucydni %>
                                                        </td>
                                                        <td>
                                                            <%= cliente.nombre %>
                                                        </td>
                                                        <td>
                                                            <%= cliente.telefono %>
                                                        </td>
                                                        <td>
                                                            <%= cliente.direccion %>
                                                        </td>
                                                        <td>
                                                            <button
                                                                onclick="Selecionar(<%= cliente.idcliente %>,'<%= cliente.rucydni %>','<%= cliente.nombre %>','<%= cliente.telefono%>','<%= cliente.direccion %>') "
                                                                type="button" class="btn btn-success"
                                                                data-bs-dismiss="modal">Seleccionar</button>
                                                        </td>
                                                    </tr>
                                                    <% }); %>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- MODAL PARA AGREGAR PROVEEDOR-->
                <div class="modal fade " id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel"
                    aria-hidden="true">
                    <div class="modal-dialog modal-xl">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h1 class="modal-title fs-5" id="exampleModalLabel">SELECCIONAR GALPON</h1>

                            </div>
                            <div class="modal-body ">
                                <div class="right-container" style="padding: 20px; flex-grow: 1;">
                                    <div class="table-responsive">
                                        <table class="table table-striped table-bordered" id="tablaProductos">
                                            <thead>
                                                <tr>
                                                    <th>GALPON</th>
                                                    <th>TIPO POLLO</th>
                                                    <th>CANTIDAD</th>
                                                    <th>DESCRIPCION</th>
                                                    <th>Acciones</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <% productos.forEach(function(controlgalpon) { %>
                                                    <tr>
                                                        <td>
                                                            <%= controlgalpon.nombregalpon %>
                                                        </td>
                                                        <td>
                                                            <%= controlgalpon.nombre_producto %>
                                                        </td>
                                                        <td>
                                                            <%= controlgalpon.cantidadpollo %>
                                                        </td>
                                                        <td>
                                                            <%= controlgalpon.descripcion %>
                                                        </td>
                                                        <td>
                                                            <button
                                                                onclick="agregarProducto(<%= controlgalpon.idcontrolgalpon %>,<%= controlgalpon.idgalpon %>,<%= controlgalpon.idproducto %>,<%= controlgalpon.filtro %>,'<%= controlgalpon.nombre_producto %>','<%= controlgalpon.fechallegada%>','<%= controlgalpon.cantidadpollo%>')"
                                                                type="button" class="btn btn-success"
                                                                data-bs-dismiss="modal">ELEGIR</button>
                                                        </td>
                                                    </tr>
                                                    <% }); %>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>
                </div>
                <footer class="sticky-footer bg-white">
                    <div class="container my-auto">
                        <div class="copyright text-center my-auto">
                            <span>Copyright &copy; UNSM 2023</span>
                        </div>
                    </div>
                </footer>
            </div>
            <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.5.3/jspdf.debug.js"></script>
            <script src="https://html2canvas.hertzen.com/dist/html2canvas.js"></script>

            <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>

            <script>
                function validarNumeros(input) {
                    // Remueve caracteres no numéricos
                    input.value = input.value.replace(/[^0-9.]/g, '');
                }

                function mostrarCamposSegunMetodoPago(metodoPago) {
                    // Oculta todos los contenedores inicialmente
                    document.getElementById('camposContado').style.display = 'none';
                    document.getElementById('camposContadoVuelto').style.display = 'none';
                    document.getElementById('camposCreditoMontoInicial').style.display = 'none';
                    document.getElementById('camposCreditoDebe').style.display = 'none';

                    // Muestra el contenedor según el método de pago seleccionado
                    if (metodoPago === 'CONTADO') {
                        document.getElementById('camposContado').style.display = 'block';
                        document.getElementById('camposContadoVuelto').style.display = 'block';
                        // Establece los valores en 0 para los campos de crédito
                        document.getElementById('montoinicialCredito').value = '0';
                        document.getElementById('debeCredito').value = '0';
                    } else if (metodoPago === 'CREDITO') {
                        document.getElementById('camposCreditoMontoInicial').style.display = 'block';
                        document.getElementById('camposCreditoDebe').style.display = 'block';
                        // Establece los valores en 0 para los campos de contado
                        document.getElementById('montocanceladoContado').value = '0';
                        document.getElementById('vueltoContado').value = '0';
                    }
                }

                function calcularVueltoContado() {
                    var total = parseFloat(document.getElementById('idtotal1').value);
                    var montoCancelado = parseFloat(document.getElementById('montocanceladoContado').value);

                    if (!isNaN(total) && !isNaN(montoCancelado) && montoCancelado >= total) {
                        var vuelto = montoCancelado - total;
                        document.getElementById('vueltoContado').value = vuelto.toFixed(2);
                    } else {
                        document.getElementById('vueltoContado').value = '0';
                    }
                }

                function calcularDebeCredito() {
                    var total = parseFloat(document.getElementById('idtotal1').value);
                    var montoInicial = parseFloat(document.getElementById('montoinicialCredito').value);

                    if (!isNaN(total) && !isNaN(montoInicial) && montoInicial < total) {
                        var debe = total - montoInicial;
                        document.getElementById('debeCredito').value = debe.toFixed(2);
                    }
                }


            </script>


            <script>
                var listaProductos = [];

                function agregarProducto(idcontrolgalpon, idgalpon, idproducto, filtro, nombre, fechallegada, cantidadgalpon) {
                    // Verificar si el producto ya existe en la lista
                    var productoExistente = listaProductos.find(function (producto) {
                        return producto.idcontrolgalpon === idcontrolgalpon;
                    });

                    if (productoExistente) {
                        // Mostrar notificación de que el producto ya está en la lista
                        alert("¡Este producto ya está en la lista!");
                        return; // No agregar el producto nuevamente
                    }
                    var producto = {
                        idcontrolgalpon: idcontrolgalpon,
                        idgalpon: idgalpon,
                        idproducto: idproducto,
                        filtro: filtro,
                        nombre: nombre,
                        fechallegada: fechallegada,
                        precio: 0,
                        cantidad: 0,
                        subtotal: 0,
                        cantidadgalpon: cantidadgalpon,
                        fechasalida: ""
                    };

                    listaProductos.push(producto);



                    actualizarTabla();
                    actualizarTotal();
                    actualizarTotal1();

                }
                ////// toca aqui
                function enviarLista() {
                    const fecha = document.getElementById('idfecha').value;
                    const idtipodoc = document.getElementById('idtipodoc').value;
                    const documento = document.getElementById('documento').value;
                    const serie = document.getElementById('idserie').value;
                    const correlativo = document.getElementById('idcorrelativo').value;
                    const subtotal = document.getElementById('idtotal').value;
                    const igv = "0";
                    const total = document.getElementById('idtotal1').value;
                    const montocancelado = document.getElementById('montocanceladoContado').value;
                    const vuelto = document.getElementById('vueltoContado').value;
                    const idusuario = document.getElementById('idusuario').value;
                    const idcliente = document.getElementById('idcliente').value;
                    const hora = document.getElementById('idhora').value;
                    const metodopago = document.getElementById('metodopago').value;
                    const montoinicial = document.getElementById('montoinicialCredito').value;
                    const debe = document.getElementById('debeCredito').value;


                    const venta = {
                        fecha: fecha,
                        idtipodoc: idtipodoc,
                        documento: documento,
                        serie: serie,
                        correlativo: correlativo,
                        subtotal: subtotal,
                        igv: igv,
                        total: total,
                        montocancelado: montocancelado,
                        vuelto: vuelto,
                        idusuario: idusuario,
                        idcliente: idcliente,
                        hora: hora,
                        metodopago: metodopago,
                        montoinicial: montoinicial,
                        debe: debe
                    };

                    console.log(venta);

                    // 1. Realizar una solicitud de tipo DELETE con axios
                    axios.post('/caja/restarcantidad', { productos: listaProductos })
                        .then(deleteResponse => {
                            console.log('DELETE response:', deleteResponse.data);

                            // 2. Realizar una solicitud de tipo POST con axios para registrar la compra
                            return axios.post('/caja/regventas', venta);
                        })
                        .then(primerPostResponse => {
                            console.log('Primer POST response:', primerPostResponse.data);

                            // Obtener el ID de la compra recién registrada
                            const idventa = primerPostResponse.data.idventa;

                            // 3. Actualizar el ID de compra en cada producto de la lista
                            listaProductos.forEach(producto => {
                                producto.idventa = idventa;
                            });

                            // 4. Realizar otra solicitud de tipo POST con axios para registrar la lista de productos
                            return axios.post('/caja/regventas2', { productos: listaProductos });
                        })
                        .then(segundoPostResponse => {
                            console.log('Segundo POST response:', segundoPostResponse.data);
                            Swal.fire({
                                icon: 'success',
                                title: 'Registro Exitoso',
                                text: 'La Compra se realizó correctamente.',
                                timer: 2000, // Cambia la duración del mensaje si lo deseas
                                showConfirmButton: false // Oculta el botón "OK"
                            });
                            if (metodopago === 'CONTADO') {
                                if (idtipodoc === 'BOLETA') {
                                    generarBoleta()
                                }
                                generarFactura()
                            }
                            // Redirigir al usuario después de 2 segundos (2000 ms)
                            setTimeout(function () {
                                window.location.href = '/caja/regventas';
                            }, 3000);
                        })
                        .catch(error => {
                            console.error(error);
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: 'ALGO SALIO MAL CONSULTE ADMIN',
                                timer: 2000, // Cambia la duración del mensaje si lo deseas
                                showConfirmButton: false // Oculta el botón "OK"
                            });
                        });

                }

                function actualizarTabla() {
                    var cuerpoTablaProductos = document.getElementById("cuerpoTablaProductos");
                    cuerpoTablaProductos.innerHTML = "";

                    listaProductos.forEach(producto => {
                        var fila = cuerpoTablaProductos.insertRow();

                        var celdaNombre = fila.insertCell(0);
                        var celdaUnidad = fila.insertCell(1);
                        var celdaCantidad = fila.insertCell(2);
                        var celdaPrecio = fila.insertCell(3);
                        var celdaSubtotal = fila.insertCell(4);
                        var celdaAcciones = fila.insertCell(5);

                        celdaNombre.textContent = producto.nombre;
                        celdaUnidad.textContent = "UNIDAD";
                        //FILTRAR EL PRECIO CORRESPONDIENTE
                        const precios = JSON.parse('<%- preciosData %>');
                        const preciosFiltrados = precios.filter(detalle => detalle.idproducto == producto.idproducto);

                        console.log('Detalles con precio_compra igual a 1:', preciosFiltrados);
                        // Extraer solo los precios de los elementos filtrados
                        const preciosExtraidos = preciosFiltrados.map(detalle => detalle.precio_compra);

                        console.log('Precios extraídos:', preciosExtraidos);
                        //-----------------------


                        //FILTRAR LA FECHA DE INICIO
                        // Filtrar la primera fecha según el idgalpon
                        const fechainicio = JSON.parse('<%- fechainicio %>');
                        console.log(fechainicio);
                        const fechainiciofiltrado = fechainicio.filter(detalle => detalle.filtro == producto.filtro);
                        // Extraer solo las fechas de los elementos filtrados
                        const fechainicioExtraidos = fechainiciofiltrado.map(detalle => detalle.fechallegada);
                        console.log('Fecha inicial:', fechainicioExtraidos);
                        // --------------------------
                        //ACA SACAMOS LA FECHA ACTUAL
                        const apiUrl = 'https://worldtimeapi.org/api/timezone/America/Lima';

                        axios.get(apiUrl)
                            .then(response => {
                                const fechaActual = new Date(response.data.utc_datetime);
                                console.log("fecha actual: " + fechaActual)
                                const fechaLlegada = new Date(fechainicioExtraidos);
                                console.log("Llegada: " + fechaLlegada);
                                const diferenciaEnMilisegundos = fechaActual - fechaLlegada;
                                let diferenciaEnDias = Math.floor(diferenciaEnMilisegundos / (1000 * 60 * 60 * 24));
                                console.log("Diferencia de días: " + diferenciaEnDias)

                                if (diferenciaEnDias > 95) {
                                    diferenciaEnDias = 90;
                                    console.log("Diferencia de días: " + diferenciaEnDias)
                                }

                                const aumentoDiarioPorcentual = 0.0266666666666;
                                const resultado = preciosExtraidos * Math.pow(1 + aumentoDiarioPorcentual, diferenciaEnDias);
                                var fechaparacontrol = new Date(fechaActual);

                                // Obtener componentes de la fecha
                                var año = fechaparacontrol.getUTCFullYear();
                                var mes = fechaparacontrol.getUTCMonth() + 1; // Se suma 1 porque los meses en JavaScript son de 0 a 11
                                var dia = fechaparacontrol.getUTCDate() - 1;

                                // Formatear la fecha como "YYYY-MM-DD"
                                var formatoFecha = año + "-" + (mes < 10 ? "0" : "") + mes + "-" + (dia < 10 ? "0" : "") + dia;

                                console.log("Fecha: " + formatoFecha);

                                producto.fechasalida = formatoFecha;
                                producto.precio = resultado;
                                celdaPrecio.textContent = producto.precio.toFixed(2);

                            })

                        //ESTA ES LA PARTE DEL IMPUT
                        //------------------ DFGD
                        // Obtener la cantidad disponible en el galpón antes de agregar el evento de entrada
                        var cantidadDisponible = producto.cantidadgalpon;

                        var inputCantidad = document.createElement("input");
                        inputCantidad.type = "text";
                        inputCantidad.value = producto.cantidad;
                        inputCantidad.addEventListener("input", function () {
                            this.value = this.value.replace(/[^0-9]/g, '');
                            const nuevaCantidad = parseInt(this.value) || 0;

                            // Validar que no exceda la cantidad disponible en el galpón
                            if (nuevaCantidad > cantidadDisponible) {
                                // Mostrar un mensaje de error con SweetAlert
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error de validación',
                                    text: 'La cantidad ingresada (' + nuevaCantidad + ') excede la cantidad disponible en el galpón (' + cantidadDisponible + ')!',
                                    showConfirmButton: true
                                });
                                // Borrar el contenido del campo
                                this.value = '';
                                // Detener la ejecución de la función
                                return;
                            }

                            // Calcular la diferencia en la cantidad
                            const diferenciaCantidad = nuevaCantidad - producto.cantidad;

                            // Actualizar la cantidadgalpon en el arreglo
                            producto.cantidadgalpon -= diferenciaCantidad;

                            producto.cantidad = nuevaCantidad;
                            producto.subtotal = producto.precio * producto.cantidad;
                            celdaSubtotal.textContent = producto.subtotal.toFixed(2);

                            actualizarTotal();
                            actualizarTotal1();
                            console.log(listaProductos);
                        });

                        // Mostrar la cantidad disponible en el galpón antes del input
                        console.log("Cantidad disponible en el galpón: " + cantidadDisponible);


                        //HASTA ACA TERMINA EL IMPUT
                        celdaCantidad.appendChild(inputCantidad);

                        celdaSubtotal.textContent = producto.subtotal.toFixed(2);

                        var botonQuitar = document.createElement("button");
                        botonQuitar.textContent = "Quitar";
                        botonQuitar.onclick = function () {
                            listaProductos.splice(listaProductos.indexOf(producto), 1);
                            actualizarTabla();
                            actualizarTotal();
                            actualizarTotal1();
                        };
                        celdaAcciones.appendChild(botonQuitar);

                    });
                    console.log(listaProductos);
                }

                function actualizarTotal() {
                    var total = listaProductos.reduce((sum, producto) => sum + producto.subtotal, 0);
                    document.getElementById("idtotal").value = total.toFixed(2);
                    actualizarTotal1(); // Actualizar el total1 cuando cambie el total
                }

                function actualizarTotal1() {
                    var total1 = parseFloat(document.getElementById("idtotal").value) || 0;
                    var total2 = (total1);
                    document.getElementById("idtotal1").value = total2.toFixed(2);
                }


                async function Selecionar(idcliente, ruc, nombreProveedor, idcategoria) {

                    const apiUrl = `https://worldtimeapi.org/api/timezone/America/Lima`;

                    try {
                        const response = await fetch(apiUrl);
                        const data = await response.json();

                        const fecha = data.datetime.split('T')[0]; // Obtiene la fecha (formato 'YYYY-MM-DD')
                        const hora = data.datetime.split('T')[1].slice(0, 5); // Obtiene la hora (formato 'HH:MM')

                        // Muestra la fecha en el campo de entrada con ID 'idfecha' y la hora en 'idhora'
                        document.getElementById('idfecha').setAttribute("max", fecha);
                        document.getElementById('idfecha').value = fecha;
                        document.getElementById('idhora').value = hora;
                    } catch (error) {
                        console.log("Error al obtener la fecha y hora desde la API:", error);
                    }
                    // Verifica la longitud del RUC y asigna el valor correspondiente al campo idtipodoc
                    if (ruc.length > 8) {
                        document.getElementById('idtipodoc').value = "RUC";
                    } else {
                        document.getElementById('idtipodoc').value = "BOLETA";
                    }
                    // Resto del código para asignar valores a otros campos
                    document.getElementById('documento').value = ruc;
                    document.getElementById('nombreproveedor').value = nombreProveedor;
                    document.getElementById('idcliente').value = idcliente;
                    document.getElementById('idusuario').value = '<%= idusuario %>';
                    document.getElementById('idcategoria').value = idcategoria;

                    // Aquí puedes hacer lo que necesites con idProveedor, ruc y nombreProveedor
                    console.log('Proveedor seleccionado - ID:', document.getElementById('idcliente').value);
                    console.log('Usuario ejecutor - ID:', document.getElementById('idusuario').value);
                    console.log('Proveedor seleccionado - RUC:', ruc);
                    console.log('Proveedor seleccionado - Nombre:', nombreProveedor);
                    console.log('Proveedor seleccionado - Nombre:', document.getElementById('idcategoria').value);

                    // También puedes enviar idProveedor, ruc y nombreProveedor al servidor mediante una petición AJAX si es necesario
                    filtrarTabla();
                }






                //--------------------------------------------------------------------------------------------------------------

                //PARA BUSCAR EN MI TABLA
                // Obtener referencia al campo de búsqueda
                // Obtener referencia al campo de búsqueda para proveedores
                const campoBusqueda = document.getElementById('busqueda');

                // Obtener referencia al campo de búsqueda para productos
                const campoBusqueda1 = document.getElementById('busqueda1');

                // Obtener todas las filas de la tabla de proveedores
                const filasTablaProveedores = document.querySelectorAll('#exampleModal1 table tbody tr');

                // Obtener todas las filas de la tabla de productos
                const filasTablaProductos = document.querySelectorAll('#exampleModal table tbody tr');

                // Función para aplicar la búsqueda en la tabla
                function aplicarBusqueda(consulta, filasTabla) {
                    filasTabla.forEach(function (fila) {
                        const contenidoFila = fila.textContent.toLowerCase();
                        if (contenidoFila.includes(consulta)) {
                            fila.style.display = 'table-row';
                        } else {
                            fila.style.display = 'none';
                        }
                    });
                }

                // Agregar evento de entrada al campo de búsqueda para proveedores
                campoBusqueda.addEventListener('input', function () {
                    const consulta = campoBusqueda.value.toLowerCase();
                    aplicarBusqueda(consulta, filasTablaProveedores);
                });

                // Agregar evento de entrada al campo de búsqueda para productos
                campoBusqueda1.addEventListener('input', function () {
                    const consulta1 = campoBusqueda1.value.toLowerCase();
                    aplicarBusqueda(consulta1, filasTablaProductos);
                });



                //PARA LIMITAR A 7 NUMEROS
                function limitarADigitos(input, maxDigitos) {
                    // Elimina cualquier carácter no numérico
                    input.value = input.value.replace(/[^0-9]/g, '');

                    // Limita la longitud a maxDigitos
                    if (input.value.length > maxDigitos) {
                        input.value = input.value.slice(0, maxDigitos);
                    }
                }


                //PARA HACER QUE SEA PURA MAYUSCULA Y SIN NUMEROS
                function validarYConvertir(input) {
                    // Expresión regular que acepta solo letras y espacios
                    var regex = /^[A-Za-z\s]+$/;

                    if (!regex.test(input.value)) {
                        // Si el valor no cumple con la expresión regular, elimina los caracteres no permitidos
                        input.value = input.value.replace(/[^A-Za-z\s]+/, '');
                    }

                    // Convierte a mayúsculas
                    input.value = input.value.toUpperCase();
                }





                //ACA VAMMOS A PONER LAS FUNCIONES DE GENERAR BOLETA
                function generarBoleta() {
                    // Crear una instancia de jsPDF
                    var pdf = new window.jspdf.jsPDF();

                    // Mostrar el contenido antes de convertirlo en PDF (para asegurarse de que todos los estilos se apliquen correctamente)
                    mostrarContenido();

                    // Agregar el contenido al PDF
                    html2canvas(document.querySelector("#boleta"), { scale: 2 }).then(canvas => {
                        const imgData = canvas.toDataURL("image/png");
                        const pdfWidth = pdf.internal.pageSize.width; // Ancho de la página
                        const pdfHeight = pdf.internal.pageSize.height; // Altura de la página
                        const aspectRatio = canvas.width / canvas.height;

                        const pdfHeightAdjusted = pdfWidth / aspectRatio; // Ajustar la altura para mantener la proporción

                        pdf.addImage(imgData, 'PNG', 5, 5, pdfWidth - 10, pdfHeightAdjusted - 10); // Ajustar las coordenadas y dimensiones según tus necesidades

                        // Guardar y descargar el PDF
                        pdf.save('boleta.pdf');

                        // Ocultar el contenido nuevamente
                        ocultarContenido();
                    });
                }

                function mostrarContenido() {
                    const fecha1 = document.getElementById('idfecha').value;
                    const idtipodoc1 = document.getElementById('idtipodoc').value;
                    const documento1 = document.getElementById('documento').value;
                    const serie1 = document.getElementById('idserie').value;
                    const correlativo1 = document.getElementById('idcorrelativo').value;
                    const subtotal1 = document.getElementById('idtotal').value;
                    const igv1 = "0";
                    const total1 = document.getElementById('idtotal1').value;
                    const montocancelado1 = document.getElementById('montocanceladoContado').value;
                    const vuelto1 = document.getElementById('vueltoContado').value;
                    const idusuario1 = document.getElementById('idusuario').value;
                    const idcliente1 = document.getElementById('nombreproveedor').value;
                    const hora1 = document.getElementById('idhora').value;
                    const metodopago1 = document.getElementById('metodopago').value;
                    const montoinicial1 = document.getElementById('montoinicialCredito').value;
                    const debe1 = document.getElementById('debeCredito').value;

                    // Datos de la empresa
                    document.getElementById("icono").src = "/src/views/img/icono.ico";
                    document.getElementById("nombreEmpresa").innerText = "GRANJA CHOLON";
                    document.getElementById("direccionEmpresa").innerText = "JR VILCHES ME DIRA";
                    document.getElementById("rucEmpresa").innerText = `RUC: 12345678912`;

                    // Datos de la boleta
                    document.getElementById("idBoleta").innerText = `ID Boleta: ${serie1}${correlativo1}`;
                    document.getElementById("fechaVenta").innerText = `Fecha de Venta: ${fecha1}`;
                    document.getElementById("horaVenta").innerText = `Hora de Venta: ${hora1}`;
                    document.getElementById("nombreCliente").innerText = `Nombre del Cliente: ${idcliente1}`;

                    // Datos de productos
                    let tablaProductos = document.getElementById("tablaProductos");
                    tablaProductos.style.fontSize = "20px";
                    tablaProductos.style.margin = "0 auto";

                    listaProductos.forEach(producto => {
                        let fila = tablaProductos.insertRow();
                        let celdaCantidad = fila.insertCell(0);
                        let celdaDescripcion = fila.insertCell(1);
                        let celdaPrecioUnitario = fila.insertCell(2);
                        let celdaImporte = fila.insertCell(3);

                        celdaCantidad.innerText = producto.cantidad;
                        celdaDescripcion.innerText = producto.nombre;
                        celdaPrecioUnitario.innerText = producto.precio.toFixed(2);
                        celdaImporte.innerText = producto.subtotal.toFixed(2);
                    });

                    // Datos de la venta
                    document.getElementById("totalVenta").innerText = `Total: $${total1}`;
                    document.getElementById("montoCancelado").innerText = `Monto Cancelado: $${montocancelado1}`;
                    document.getElementById("vuelto").innerText = `Vuelto: $${vuelto1}`;
                    document.getElementById("vendedor").innerText = `Vendedor: ${'<%= nombre %>'}`;

                    // Mostrar el contenido
                    document.getElementById("boleta").style.display = "block";
                }

                function ocultarContenido() {
                    // Ocultar el contenido
                    document.getElementById("boleta").style.display = "none";
                }

                //-------------------------------------------------





                //GENERAR LA FACTURA
                function generarFactura() {
                    // Crear una instancia de jsPDF
                    var pdf = new window.jspdf.jsPDF();

                    // Mostrar el contenido antes de convertirlo en PDF (para asegurarse de que todos los estilos se apliquen correctamente)
                    mostrarContenidoFactura();

                    // Agregar el contenido al PDF
                    html2canvas(document.querySelector("#factura"), { scale: 2 }).then(canvas => {
                        const imgData = canvas.toDataURL("image/png");
                        const pdfWidth = pdf.internal.pageSize.width; // Ancho de la página
                        const pdfHeight = pdf.internal.pageSize.height; // Altura de la página
                        const aspectRatio = canvas.width / canvas.height;

                        const pdfHeightAdjusted = pdfWidth / aspectRatio; // Ajustar la altura para mantener la proporción

                        pdf.addImage(imgData, 'PNG', 5, 5, pdfWidth - 10, pdfHeightAdjusted - 10); // Ajustar las coordenadas y dimensiones según tus necesidades

                        // Guardar y descargar el PDF
                        pdf.save('factura.pdf');

                        // Ocultar el contenido nuevamente
                        ocultarContenidoFactura();
                    });
                }

                function mostrarContenidoFactura() {
                    const fecha1 = document.getElementById('idfecha').value;
                    const idtipodoc1 = document.getElementById('idtipodoc').value;
                    const documento1 = document.getElementById('documento').value;
                    const serie1 = document.getElementById('idserie').value;
                    const correlativo1 = document.getElementById('idcorrelativo').value;
                    const subtotal1 = document.getElementById('idtotal').value;
                    const igv1 = "0";
                    const total1 = document.getElementById('idtotal1').value;
                    const montocancelado1 = document.getElementById('montocanceladoContado').value;
                    const vuelto1 = document.getElementById('vueltoContado').value;
                    const idusuario1 = document.getElementById('idusuario').value;
                    const idcliente1 = document.getElementById('nombreproveedor').value;
                    const hora1 = document.getElementById('idhora').value;
                    const metodopago1 = document.getElementById('metodopago').value;
                    const montoinicial1 = document.getElementById('montoinicialCredito').value;
                    const debe1 = document.getElementById('debeCredito').value;

                    // Datos de la empresa
                    document.getElementById("logo1").src = "/src/views/img/icono.ico"; // Cambia ruta de tu logo
                    document.getElementById("nombreEmpresa1").innerText = "GRANJA CHOLON";
                    document.getElementById("direccionEmpresa1").innerText = "JR VILCHES ME DIRA";
                    document.getElementById("rucEmpresa1").innerText = `RUC: 12345678912`;

                    // Datos de la factura
                    document.getElementById("numFactura").innerText = `ID Boleta: ${serie1}${correlativo1}`;
                    document.getElementById("fechaFactura").innerText = `Fecha de Factura: ${fecha1}`;
                    document.getElementById("rucCliente").innerText = `RUC: ${documento1}`;
                    document.getElementById("razonSocialCliente").innerText = `Razón Social: ${idcliente1}`;

                    // Datos de productos
                    let tablaProductos = document.getElementById("tablaProductos1");
                    tablaProductos.style.fontSize = "20px";
                    tablaProductos.style.margin = "0 auto";

                    listaProductos.forEach(producto => {
                        let fila = tablaProductos.insertRow();
                        let celdaCantidad = fila.insertCell(0);
                        let celdaDescripcion = fila.insertCell(1);
                        let celdaPrecioUnitario = fila.insertCell(2);
                        let celdaImporte = fila.insertCell(3);

                        celdaCantidad.innerText = producto.cantidad;
                        celdaDescripcion.innerText = producto.nombre;
                        celdaPrecioUnitario.innerText = producto.precio.toFixed(2);
                        celdaImporte.innerText = producto.subtotal.toFixed(2);
                    });

                    // Datos de la venta
                    document.getElementById("totalFactura").innerText = `Total: $${total1}`;
                    document.getElementById("montoCancelado1").innerText = `Monto Cancelado: $${montocancelado1}`;
                    document.getElementById("vuelto1").innerText = `Vuelto: $${vuelto1}`;
                    document.getElementById("vendedor1").innerText = `Vendedor: ${'<%= nombre %>'}`;

                    // Mostrar el contenido
                    document.getElementById("factura").style.display = "block";
                }

                function ocultarContenidoFactura() {
                    // Ocultar el contenido
                    document.getElementById("factura").style.display = "none";
                }

                //-----------------------------------------------------

            </script>


            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"
                integrity="sha384-HwwvtgBNo3bZJJLYd8oVXjrBZt8cqVSpeBNS5n7C8IVInixGAoxmnlMuBnhbgrkm"
                crossorigin="anonymous"></script>
            <!-- /.container-fluid -->

    </div>
    <!-- End of Main Content -->

    <!-- Footer -->

    <!-- End of Footer -->

    </div>
    <!-- End of Content Wrapper -->

    </div>
    <!-- End of Page Wrapper -->

    <!-- Scroll to Top Button-->
    <a class="scroll-to-top rounded" href="#page-top">
        <i class="fas fa-angle-up"></i>
    </a>

    <!-- Logout Modal-->
    <div class="modal fade" id="logoutModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Ready to Leave?</h5>
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body">Select "Logout" below if you are ready to end your current session.</div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                    <a class="btn btn-primary" href="login.html">Logout</a>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap admin core JavaScript-->
    <script src="/src/boostrapdiseñoadmin/vendor/jquery/jquery.min.js"></script>
    <script src="/src/boostrapdiseñoadmin/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="/src/boostrapdiseñoadmin/vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="/src/boostrapdiseñoadmin/js/sb-admin-2.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

</body>

</html>